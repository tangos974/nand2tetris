// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, a=ram1load, b=ram2load, c=ram3load, d=ram4load, e=ram5load, f=ram6load, g=ram7load, h=ram8load, sel=address[0..2]);

    RAM4K(in=in, out=ram8out1, load=ram1load, address=address[3..14]);
    RAM4K(in=in, out=ram8out2, load=ram2load, address=address[3..14]);
    RAM4K(in=in, out=ram8out3, load=ram3load, address=address[3..14]);
    RAM4K(in=in, out=ram8out4, load=ram4load, address=address[3..14]);
    RAM4K(in=in, out=ram8out5, load=ram5load, address=address[3..14]);
    RAM4K(in=in, out=ram8out6, load=ram6load, address=address[3..14]);
    RAM4K(in=in, out=ram8out7, load=ram7load, address=address[3..14]);
    RAM4K(in=in, out=ram8out8, load=ram8load, address=address[3..14]);

    Mux8Way16(a=ram8out1, b=ram8out2, c=ram8out3, d=ram8out4, e=ram8out5, f=ram8out6, g=ram8out7, h=ram8out8, sel=address[0..2], out=out);

}